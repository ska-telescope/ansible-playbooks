---

- name: k8s_create_inventory
  hosts: localhost
  become: true
  become_method: sudo
  become_flags: '-E -S -n'
  vars:
    cluster_name: 'mycluster'
    ips: '0.0.0.0 0.0.0.0'
    master_floating_ip: '0.0.0.0'
    kube_oidc_client_id: 'dex-k8s-authenticator'
    kubespray_dir: '/usr/src/kubespray'
  tasks:
    - name: Install dependencies
      apt:
        name:
            - python-pip
            - python3-pip
        state: latest
        force: yes 
        update_cache: yes

    - include: roles/helm/tasks/main.yml
    
    - git:
        repo: 'https://github.com/kubernetes-sigs/kubespray.git'
        dest: "{{kubespray_dir}}"
        version: '{{ kube_spray_version }}'

    - name: Install requirements
      shell: |
        pip install -r {{kubespray_dir}}/requirements.txt
        pip3 install -r {{kubespray_dir}}/contrib/inventory_builder/requirements.txt

    # Copy ``inventory/sample`` as ``inventory/{{cluster_name}}``
    # Update Ansible inventory file with inventory builder
    - name: Create config file
      shell: |
        #!/bin/bash 
        cd {{kubespray_dir}}
        cp -rfp inventory/sample inventory/{{cluster_name}} 
        CONFIG_FILE=inventory/{{cluster_name}}/hosts.yaml python3 contrib/inventory_builder/inventory.py {{ ips }}
        ls -la inventory
        pwd

    - name: Set kube-version
      lineinfile:
        path: "{{ kubespray_dir }}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kube_version:'
        line: 'kube_version: {{k8s_version}}'

    - name: Set helm-enabled
      lineinfile:
        path: "{{kubespray_dir}}/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
        regexp: '^helm_enabled:'
        line: 'helm_enabled: true'

    - name: Set helm-version
      lineinfile:
        path: "{{kubespray_dir}}/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
        regexp: '^helm_version:'
        line: 'helm_version: {{helm_version}}'

    - name: Set kubeconfig_localhost
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kubeconfig_localhost:'
        line: 'kubeconfig_localhost: true'

    - name: Set kubectl_localhost
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kubectl_localhost:'
        line: 'kubectl_localhost: true'

    - name: Enable authentication
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kube_oidc_auth:'
        line: 'kube_oidc_auth: true'

    - name: Set authentication url 
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kube_oidc_url:'
        line: 'kube_oidc_url: http://{{master_floating_ip}}:32000'

    - name: Set client id
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^kube_oidc_client_id:'
        line: 'kube_oidc_client_id: dex-k8s-authenticator'  

    - name: Set client id
      lineinfile:
        path: "{{kubespray_dir}}/inventory/{{cluster_name}}/group_vars/k8s-cluster/k8s-cluster.yml"
        regexp: '^oidc_username_claim:'
        line: 'oidc_username_claim: preferred_username'  

    - name: Change permissions of temporary Kubespray directory
      become: true
      file: 
        path: "{{kubespray_dir}}"
        owner: "{{ localuser }}"
        group: "{{ localuser }}"
        recurse: yes

    - debug:
        msg: 
        - "The following command installs the cluster:"
        - "cd {{kubespray_dir}} && ansible-playbook --flush-cache -u remote_machine_username -b -i inventory/{{cluster_name}}/hosts.yaml cluster.yml --private-key=/home/ubuntu/cloud.key"
        - "Save inventory folder: {{kubespray_dir}}/inventory/{{cluster_name}}"

