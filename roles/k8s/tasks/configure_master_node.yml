---
- name: Pulling images required for setting up a Kubernetes cluster
  shell: kubeadm config images pull

- name: Resetting kubeadm
  shell: kubeadm reset -f

- name: Create kubeadm conf file
  copy:
   dest: /root/kubeadm.yml
   content: |
    ---
    apiVersion: kubeadm.k8s.io/v1beta2
    kind: ClusterConfiguration
    kubernetesVersion: v{{ k8s_version }}
    apiServer:
      certSANs:
      - {{ dns }}
      extraArgs:
        authorization-mode: Node,RBAC
        oidc-issuer-url: {{ oidc_issuer_url }}
        oidc-username-claim: {{ oidc_username_claim }}
        oidc-client-id: {{ oidc_client_id }}
      timeoutForControlPlane: 4m0s
    certificatesDir: /etc/kubernetes/pki
    clusterName: kubernetes
    controllerManager: {}
    dns:
      type: CoreDNS
    etcd:
      local:
        dataDir: /var/lib/etcd
    imageRepository: k8s.gcr.io
    networking:
      dnsDomain: cluster.local
      podSubnet: 10.244.0.0/16
      serviceSubnet: 10.96.0.0/12
    scheduler: {}

    ---
    apiVersion: kubeadm.k8s.io/v1beta2
    kind: InitConfiguration
    localAPIEndpoint:
      advertiseAddress: {{ ansible_eth0.ipv4.address }}
      bindPort: 6443
  tags:
    - packages

- name: Initializing Kubernetes cluster
  shell: kubeadm init --config /root/kubeadm.yml

- name: Tidy up Kubeadm script
  file:
    path: '/root/kubeadm.yml'
    state: absent

- name: Copying required files
  shell: |
    rm -rf $HOME/.kube
    mkdir -p $HOME/.kube
    sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: Install Network Add-on
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: Download helm install script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get
    dest: /root/helm.sh
    mode: '0700'

- name: Replace "/usr/local/bin" by "/bin"
  replace:
    path: /root/helm.sh
    regexp: '/usr/local/bin'
    replace: "/bin"

- name: Install Helm
  shell: "/root/helm.sh -v {{ helm_version }}"
  args:
    executable: /bin/bash

- name: Initialise Helm
  shell: "helm init --client-only"
  args:
    executable: /bin/bash

- name: Tidy up Helm script
  file:
    path: '/root/helm.sh'
    state: absent

- name: Install tiller plugin
  shell: "helm plugin install https://github.com/rimusz/helm-tiller"
  args:
    executable: /bin/bash