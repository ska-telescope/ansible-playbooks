---
# tasks file for prometheus

- name: ensure Prometheus data directory
  file:
    path: '{{ prometheus_data_dir }}'
    state: directory
    mode: 0766
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
  become: yes

- name: ensure Prometheus configuration directory
  file:
    path: '{{ prometheus_config_dir }}'
    state: directory
    mode: 0755
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
  become: yes

- name: ensure Prometheus rules configuration directory
  file:
    path: '{{ prometheus_config_dir }}/rules/'
    state: directory
    mode: 0755
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
  become: yes

- name: Copy prom_helper to /usr/local/bin
  copy:
    src: "{{ playbook_dir }}/openstack/prom_helper.py"
    dest: "/usr/local/bin/prom_helper.py"
  become: yes

- name: Set environment variables for prom_helper
  blockinfile:
    path: /etc/environment
    block: |
      auth_url="{{ auth_url }}"
      username="{{ username }}"
      password="{{ password }}"
      project_name="{{ project_name }}"
  become: yes

- name: Install cron
  apt:
    pkg:
      - cron
    state: present
    update_cache: yes

- name: Add cron job
  lineinfile:
    path: /etc/crontab
    line: 0 4     * * *   root    python3 /usr/local/bin/prom_helper.py -g && mv *.json /etc/prometheus/
  become: yes

- name: Generate Prometheus configuration
  become: true
  template:
    src: "{{ playbook_dir }}/roles/prometheus/templates/prometheus.yml.j2"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0755

- name: Create alerting rules file
  template:
    src: "{{ playbook_dir }}/roles/prometheus/templates/alert.rules.j2"
    dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0755
  when:
    - prometheus_alert_rules != []

- name: Create record rules file
  template:
    src: "{{ playbook_dir }}/roles/prometheus/templates/record.rules.j2"
    dest: "{{ prometheus_config_dir }}/rules/record.rules"
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0755
  when:
    - prometheus_record_rules != []

- name: copy ceph alerting rules
  copy:
    src: "{{ role_path }}/files/rules/ceph/ceph_dashboard.rules"
    dest: "/etc/prometheus/rules/ceph_dashboard.rules"
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0644

- name: copy elasticstack alerting rules
  copy:
    src: "{{ role_path }}/files/rules/elasticstack/elasticsearch.rules"
    dest: "/etc/prometheus/rules/elasticsearch.rules"
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0644

- name: copy kubernetes alerting rules
  copy:
    src: "{{ role_path }}/files/rules/kubernetes/{{ item }}"
    dest: "/etc/prometheus/rules/kubernetes_{{ item }}"
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0644
  with_items:
    - prometheus_alerts.yaml
    - prometheus_rules.yaml

- name: Copy up resource files
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
  with_items:
    - ceph-mgr.json
    - docker_exporter.json
    - elasticsearch_exporter.json
    - gitlab_exporter.json
    - kubernetes_exporter.json
    - kubernetes_telemetry.json
    - node_exporter.json

- name: Pull prometheus image {{ prometheus_docker_tags }}
  docker_image:
    name: prom/prometheus
    tag: "{{ prometheus_docker_tags }}"

- name: Setup config folder # noqa 301 Commands should not change things if nothing needs doing
  shell: |
    [ ! -f {{ k8s_certificate_authority }} ] || cp -rf {{ k8s_certificate_authority }} {{ prometheus_config_dir }}
    [ ! -f {{ k8s_client_certificate }} ] || cp -rf {{ k8s_client_certificate }} {{ prometheus_config_dir }}
    [ ! -f {{ k8s_client_key }} ] || cp -rf {{ k8s_client_key }} {{ prometheus_config_dir }}

- name: Stop prometheus container
  docker_container:
    name: prometheus
    state: absent

- name: Start prometheus container
  docker_container:
    name: prometheus
    image: "prom/prometheus:{{ prometheus_docker_tags} }"
    state: started
    user: root
    restart: yes
    restart_policy: on-failure
    ports:
     - "9090:9090"
    volumes:
      - "{{ prometheus_config_dir }}:/etc/prometheus"
      - "/etc/hosts:/etc/hosts:ro"
      - "{{ prometheus_data_dir }}:/prometheus"
