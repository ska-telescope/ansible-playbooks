
# note: work around for proxy
- name: Add Docker GPG key Ubuntu
  apt_key:
    data: "{{ lookup('url', 'https://download.docker.com/linux/ubuntu/gpg', split_lines=False) }}"
  when:
    - ansible_distribution == 'Ubuntu'
    - install_ska_docker == 'yes'

- name: Add Docker GPG key Debian
  apt_key:
    data: "{{ lookup('url', 'https://download.docker.com/linux/debian/gpg', split_lines=False) }}"
  when:
    - ansible_distribution == 'Debian'
    - install_ska_docker == 'yes'

- name: Install apt-transport-https
  apt:
    name:
    - apt-transport-https
  when:
  - install_ska_docker == 'yes'

- name: Install ca-certificates curl software-properties-common
  apt:
    name:
    - ca-certificates
    - curl
    - software-properties-common
    - make
    update_cache: yes
  when:
  - install_ska_docker == 'yes'

- name: Add Docker APT repository Ubuntu
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
  when:
    - ansible_distribution == 'Ubuntu'
    - install_ska_docker == 'yes'

- name: Add Docker APT repository Debian
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable
  when:
    - ansible_distribution == 'Debian'
    - install_ska_docker == 'yes'

- file:
    path:
      - /var/lib/apt/lists/lock
      - /var/cache/apt/archives/lock
      - /var/lib/dpkg/lock
    state: absent

- name: Install list of packages Ubuntu
  apt:
    name:
    - gnupg-agent
    update_cache: yes
  when:
    - ansible_distribution == 'Ubuntu'
    - install_ska_docker == 'yes'

- name: Install list of packages Debian
  apt:
    name:
      - gnupg2
    update_cache: yes
  when:
    - ansible_distribution == 'Debian'
    - install_ska_docker == 'yes'

- name: Install docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    update_cache: yes
  when:
    - install_ska_docker == 'yes'

- name: Create /etc/systemd/system/docker.service.d
  file:
    path: "/etc/systemd/system/docker.service.d"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: true
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian" and install_ska_docker == 'yes'

- name: Configure docker server
  template: src="{{ ansible_os_family }}-docker.conf.j2" dest="/etc/systemd/system/docker.service.d/docker.conf"
  notify:
    - restart and docker
  become: true
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian" and install_ska_docker == 'yes'

- meta: flush_handlers

- name: Post installation Docker
  shell: |
    groupadd -f docker
    getent passwd vagrant  > /dev/null
    if [ $? -eq 0 ]; then
      usermod -a -G docker vagrant
      if [ -e '/home/vagrant/.docker/config.json' ]; then
        chmod 0744 '/home/vagrant/.docker/config.json'
      fi
    fi
    getent passwd tango  > /dev/null
    if [ $? -eq 0 ]; then
      usermod -a -G docker tango
      if [ -e '/home/tango/.docker/config.json' ]; then
        chmod 0744 '/home/tango/.docker/config.json'
      fi
    fi
    usermod -a -G docker {{ ansible_user_id }}
    if [ -e '/home/{{ ansible_user_id }}/.docker/config.json' ]; then
      chmod 0744 '/home/{{ ansible_user_id }}/.docker/config.json'
    fi
  when:
    - install_ska_docker == 'yes'

- name: Post installation Docker (ansible_ssh_user)
  shell: |
    usermod -a -G docker {{ ansible_ssh_user }}
  when:
    - ansible_ssh_user is defined
    - install_ska_docker == 'yes'

- name: Creates directory /usr/src/ska-docker
  file:
    path: /usr/src/ska-docker
    state: absent
  when:
    - install_ska_docker == 'yes'

- name: Creates directory /usr/src/ska-docker
  file:
    path: /usr/src/ska-docker
    state: directory
  when:
    - install_ska_docker == 'yes'

- git:
    repo: 'https://github.com/ska-telescope/ska-docker.git'
    dest: /usr/src/ska-docker
    update: yes
    ssh_opts: "-o StrictHostKeyChecking=no"
  when:
    - install_ska_docker == 'yes'

- name: Install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: "/usr/local/bin/docker-compose"
    mode: 0755
    validate_certs: no
  when:
    - install_ska_docker == 'yes'

- name: Copy environment_tango.sh
  copy:
    src: "{{playbook_dir}}/roles/ska-docker/files/environment_tango.sh"
    dest: /etc/profile.d/environment_tango.sh
    mode: 0755
    force: yes
  when:
    - install_ska_docker == 'yes'

- name: Stop MySql Server (if running)
  service:
    name: mysql
    state: stopped
    enabled: no
  when:
    - start_mysql_server == 'yes'

- name: Start the tango system
  shell: |
    cd /usr/src/ska-docker/docker-compose
    make up
    make start tangotest
  when:
    - start_tango == 'yes'
    - install_ska_docker == 'yes'