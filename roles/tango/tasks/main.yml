---
# for debian only: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199
- name: create directory /usr/share/man/man1 (bugs.debian=863199)
  shell: mkdir -p /usr/share/man/man1
  when: ansible_distribution == 'Debian'

# - name: Add Java APT repository Ubuntu
#   apt_repository:
#     repo: ppa:openjdk-r/ppa
#   when:
#     - build_tango == 'yes'
#     - ansible_distribution == 'Ubuntu'

- name: Add key for openjdk-r/ppa
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: DA1A4A13543B466853BAF164EB9B1D8886F44E2A

- name: Add Java APT repository Ubuntu
  lineinfile:
    line: 'deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu xenial main'
    dest: /etc/apt/sources.list.d/openjdk.list
    create: yes
    owner: root
    group: root
    mode: 0644
  when:
    - build_tango == 'yes'
    - ansible_distribution == 'Ubuntu'

- name: Update apt cache
  apt:
    update_cache: yes
  when:
    - build_tango == 'yes'
    - ansible_distribution == 'Ubuntu'

- name: Install dependencies Ubuntu
  apt:
    name:
        - openjdk-8-jdk
        - openjdk-8-jre
  when:
    - build_tango == 'yes'
    - ansible_distribution == 'Ubuntu'

- name: Install dependencies Debian
  apt:
    name:
        - default-jdk
        - default-jre-headless
  when:
    - build_tango == 'yes'
    - ansible_distribution == 'Debian'

- name: Install dependencies
  apt:
    name:
        - python
        - python-dev
        - python-pkgconfig
        - autoconf
        - automake
        - build-essential
        - ca-certificates
        - curl
        - libkrb5-dev
        - libtool
        - pkg-config
        - unzip
        - file
        - cmake
        - zlib1g-dev
    state: latest
    update_cache: yes
  when: build_tango == 'yes'

- name: Build lib zeromq
  shell: |
    ZEROMQ_DOWNLOAD_URL=https://github.com/zeromq/libzmq/archive/v{{LIBZEROMQ_VERSION}}.tar.gz \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p /usr/src/zeromq \
    && cd /usr/src/zeromq \
    && curl -kfsSL "$ZEROMQ_DOWNLOAD_URL" -o zeromq.tar.gz \
    && tar xf zeromq.tar.gz -C /usr/src/zeromq --strip-components=1 \
    && ./autogen.sh \
    && ./configure --enable-static=no \
    && make -C /usr/src/zeromq -j$(nproc) \
    && make -C /usr/src/zeromq install \
    && rm -r /usr/src/zeromq
  when: build_tango == 'yes'

- name: Build cpp zeromq
  shell: |
    CPPZMQ_DOWNLOAD_URL=https://github.com/zeromq/cppzmq/archive/v{{CPPZEROMQ_VERSION}}.tar.gz \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p /usr/src/cppzmq \
    && cd /usr/src/cppzmq \
    && curl -kfsSL "$CPPZMQ_DOWNLOAD_URL" -o cppzmq.tar.gz \
    && tar xf cppzmq.tar.gz -C /usr/src/cppzmq --strip-components=1 \
    && mkdir -p build \
    && cd build \
    && cmake -DCPPZMQ_BUILD_TESTS=OFF .. \
    && make -j4 install \
    && rm -r /usr/src/cppzmq
  when: build_tango == 'yes'

- name: Build omniorb
  shell: |
    OMNIORB_DOWNLOAD_URL=https://nexus.engageska-portugal.pt/repository/raw/omniorb/omniORB-{{OMNIORB_VERSION}}.tar.bz2 \
      && rm -rf /var/lib/apt/lists/* \
      && mkdir -p /usr/src/omniorb \
      && cd /usr/src/omniorb \
      && curl -fsSL "$OMNIORB_DOWNLOAD_URL" -o omniorb.tar.bz2 \
      && tar xf omniorb.tar.bz2 -C /usr/src/omniorb --strip-components=1 \
      && ./configure --enable-static=no \
      && make -C /usr/src/omniorb -j$(nproc) \
      && make -C /usr/src/omniorb install \
      && rm -r /usr/src/omniorb
  when: build_tango == 'yes'

- name: Build TANGO
  shell: |
    update-java-alternatives -s java-1.8.0-openjdk-amd64
    TANGO_DOWNLOAD_URL=https://nexus.engageska-portugal.pt/repository/raw/tango-cs/tango-{{TANGO_VERSION}}-rc2.tar.gz \
    && mkdir -p /usr/share/man/man1 \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p /usr/src/tango \
    && cd /usr/src/tango \
    && curl -fsSL "$TANGO_DOWNLOAD_URL" -o tango.tar.gz \
    && tar xf tango.tar.gz -C /usr/src/tango --strip-components=1 \
    && ./configure --with-zmq=/usr/local --with-omni=/usr/local --with-mysqlclient-prefix=/usr --enable-static=no \
    && make -C /usr/src/tango -j$(nproc) \
    && make -C /usr/src/tango install \
    && ldconfig \
    && rm -r /usr/src/tango

    # what for?
    rm -rf /var/lib/apt/lists/* /etc/apt/apt.conf.d/30proxy

    # what for?
    sed -i -e '/^assistive_technologies=/s/^/#/' /etc/java-*-openjdk/accessibility.properties

    getent passwd tango  > /dev/null
    if [ $? -eq 0 ]; then
        echo "tango user already created"
    else
        echo "creating tango user"
        useradd --create-home --home-dir /home/tango tango
        mkdir --parents /etc/sudoers.d
        echo "tango ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/tango \
        && chmod 0440 /etc/sudoers.d/tango
    fi
  when: build_tango == 'yes'
